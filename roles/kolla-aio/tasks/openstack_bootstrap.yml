---

- name: fetch kolla passwords into fetch directory
  fetch: src=/etc/kolla/passwords.yml dest=fetch/ flat=yes

- name: load openstack credentials from kolla config
  include_vars: fetch/passwords.yml

- name: create os client config directory
  file: path=/etc/openstack state=directory

- name: create os client config
  template: src=clouds.yaml.j2 dest=/etc/openstack/clouds.yaml

- name: create external uplink network
  os_network:
    cloud: kolla
    name: external-net
    external: yes
    shared: yes
    provider_network_type: flat
    provider_physical_network: physnet1

- name: create external uplink subnet on virtual interface
  os_subnet:
    cloud: kolla
    name: external-subnet
    network_name: external-net
    cidr: "{{ kolla_external_bridge_cidr }}"
    dns_nameservers:
      - 8.8.8.8
      - 8.8.4.4
    enable_dhcp: yes
    allocation_pool_start: "{{ kolla_external_pool_start }}"
    allocation_pool_end: "{{ kolla_external_pool_end }}"
    gateway_ip: "{{ kolla_external_bridge_ip }}"
  when: kolla_network_scenario == "virtual_interface"

- name: create external uplink subnet on second interface
  os_subnet:
    cloud: kolla
    name: external-subnet
    network_name: external-net
    cidr: "{{ kolla_external_bridge_cidr }}"
    dns_nameservers:
      - 8.8.8.8
      - 8.8.4.4
    enable_dhcp: no
    allocation_pool_start: "{{ kolla_external_pool_start }}"
    allocation_pool_end: "{{ kolla_external_pool_end }}"
    gateway_ip: "{{ kolla_external_bridge_gateway }}"
  when: kolla_network_scenario == "second_interface"

- name: check if ceph cinder volume type exists
  shell:
    cmd: "openstack --os-cloud=kolla volume type list --format value | grep ceph"
  failed_when: false
  register: ceph_type_key

- name: create cinder volume type for ceph
  shell: openstack --os-cloud=kolla volume type create --property volume_backend_name=ceph ceph
  when: ceph_type_key.rc == 1

- name: create basic instance types
  os_nova_flavor:
    cloud: kolla
    name: "{{ item.name }}"
    vcpus: "{{ item.vcpus }}"
    ram: "{{ item.ram }}"
    disk: "{{ item.disk }}"
    swap: "{{ item.swap }}"
    state: present
  with_items:
    - { name: "t2.nano", vcpus: "1", ram: "512", disk: "1", swap: "0" }
    - { name: "t2.micro", vcpus: "1", ram: "1024", disk: "11", swap: "0" }
    - { name: "t2.small", vcpus: "1", ram: "2048", disk: "11", swap: "0" }
    - { name: "t2.normal", vcpus: "2", ram: "2048", disk: "11", swap: "0" }
    - { name: "t2.medium", vcpus: "2", ram: "4096", disk: "20", swap: "0" }
    - { name: "t2.large", vcpus: "2", ram: "8192", disk: "20", swap: "0" }
    - { name: "t2.xlarge", vcpus: "4", ram: "16384", disk: "20", swap: "2048" }
    - { name: "t2.2xlarge", vcpus: "8", ram: "32768", disk: "20", swap: "4096" }
...
